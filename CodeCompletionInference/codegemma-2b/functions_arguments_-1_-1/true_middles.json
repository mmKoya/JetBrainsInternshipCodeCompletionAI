[
    "image_sample, 2 * segments, None",
    "0, 1 - 0.5 * half, 100",
    "image, dpu, inner_curve, outer_curve, theta1, theta2, left_side, right_side",
    "100, width, gap, pits_per_segment",
    "(curve1, curve2, np.array([[curve1[0, 0], curve1[0, 1]]]))",
    "num_lines, middle_end + (max_context_lines if max_context_lines >= 0 else num_lines)",
    "0, 255",
    "image_sample, 2 * segments, None",
    "1, -1",
    "1, number_of_segments",
    "y",
    "image, dpu, inner_radius, outer_radius, sample_rotation, sample_rotation + np.pi / segments",
    "curve_cartesian[:, 1]",
    "angle",
    "regions[neighbour]['color_histogram'], regions[new_id]['color_histogram']",
    "image, dpu, sides_per_segment, inner_radius, outer_radius, sample_rotation, sample_rotation+np.pi/segments, left_edge, right_edge",
    "(rho, theta)",
    "i * angle + global_rotation_offset",
    "curve, 0",
    "radius, 0",
    "expected",
    "region2_info['neighbors']",
    "(prefix, middle, suffix)",
    "(inner_curve, outer_curve)",
    "image, dpu, grid_size, (1, 1), inner_radius, outer_radius, width, sample_rotation, sample_rotation+np.pi/segments, left_edge, right_edge, interpolation",
    "image, curve, dpu",
    "100, width, gap, pits_per_segment",
    "image_sliced, extent, path, outline_curves",
    "tree",
    "max(region1_id, region2_id)",
    "perm2",
    "(curve1, curve2)",
    "f\"Error calculating BERTScore: {e}\"",
    "(random_split_name, examples_split)",
    "control_nodes, values",
    "(x_fine, y_fine)",
    "curve[:, 1]",
    "curve1, i * (theta2 - theta1) / periods1",
    "np.vstack([CurveTransforms.rotate_single(curve2, i*(theta2-theta1)/periods2, inplace=False) for i in range(0, periods2)]), 0",
    "0, current.id",
    "n + 1",
    "np.uint8",
    "num_segments",
    "block",
    "image_sliced, extent, path, outline_curves",
    "pivot[0], pivot[1]",
    "new_height * clip_ar",
    "len(curves)",
    "int(np.minimum(height, y_abs*dpu)), height-1",
    "bounds"
]